PART I - The Keystore

1. $JAVA_HOME/bin/keytool -genkey -alias [youralias] -keyalg RSA -keystore [/preferred/keystore/path]

2. Next, keytool will ask you to enter the password you want to use for the keystore. Again, choose whatever you like (but don't forget it).

3. After you choose the keystore password, you will enter the information required for the Certificate, such as your company and your name. Make sure this information is accurate, as you will have to submit this file to the Certificate Authority of your choice to obtain a certificate.

The last thing keytool will ask you to specify is the key password, which is the password specific to this specific certificates. Rather than enter anything at this prompt, just press ENTER.

This will cause keytool to set the key password to a value equivalent to the keystore password. Matching passwords are REQUIRED for Tomcat to access the certificate. If you choose two different passwords, any attempts to access the keystore will result in a crash (so don't do it).

-----------------------------------------------------------------------------------------------------------------------------------------------------------


Step 2 - Creating the Certificate Signing Request

$JAVA_HOME/bin/keytool -certreq -keyalg RSA -alias [youralias] -file [yourcertificatname].csr -keystore [path/to/your/keystore]

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Step 3 - Installing Your New Certificate

To import the Root Certificate -

keytool -import -alias root -keystore [path/to/your/keystore] -trustcacerts -file [path/to/the/root_certificate]

To import your new Certificate -

keytool -import -alias [youralias] -keystore [path/to/your/keystore] -file [path/to/your_keystore]

-----------------------------------------------------------------------------------------------------------------------------------------------------------

PART II - Configuring Tomcat to use SSL

Step 1 - Configuring Tomcat's SSL Connectors

	<Connector port="8080" protocol="HTTP/1.1"
			connectionTimeout="20000" redirectPort="8443" />

		<Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
			maxThreads="150" SSLEnabled="true" scheme="https" secure="true"
			clientAuth="false" sslProtocol="TLS" keystoreFile="[path/to/your_keystore]"
			keystorePass="[your password]">
		</Connector>


PART III - install smartmanager

git clone https://github.com/asta1992/BA_IoT_Code

edit /smartmanager/WebContent/WEB-INF/lwm2m_server-config.xml
address und port

mvn package

copy war to tomcat/webapp

start tomcat
